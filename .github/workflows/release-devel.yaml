---
name: release-devel
on:
  pull_request:
  push:
    branches: [main]

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Shellcheck - hack
        uses: azohra/shell-linter@latest
        with:
          path: "hack/*.sh"

      - name: Shellcheck - Plugin - openshift-tests
        uses: azohra/shell-linter@latest
        with:
          path: './openshift-tests-provider-cert/plugin/*.sh'

      - name: Shellcheck - Plugin - openshift-tests - hack
        uses: azohra/shell-linter@latest
        with:
          path: './openshift-tests-provider-cert/hack/*.sh'

#
# Build container image
#
  build-amd64:
    name: build container amd64
    runs-on: macos-latest
    needs: [linters]
    env:
      VERSION: "v0.0.0-devel-pr.${{ github.event.pull_request.number }}"
      TOOLS_REPO: localhost/tools
      PLUGIN_TESTS_REPO: localhost/plugin-openshift-tests
      MGM_REPO: localhost/must-gather-monitoring

    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build images AMD64
        shell: bash
        run: |
          echo "> Build and publish container image:"
          make build-arch-amd64 VERSION=${VERSION}

  build-arm64:
    name: build container arm64
    runs-on: ubuntu-latest
    needs: [linters]
    env:
      VERSION: "v0.0.0-devel-pr.${{ github.event.pull_request.number }}"
      TOOLS_REPO: localhost/tools
      PLUGIN_TESTS_REPO: localhost/plugin-openshift-tests
      MGM_REPO: localhost/must-gather-monitoring

    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build images ARM64
        shell: bash
        run: |
          echo "> Build and publish container image:"
          make build-arch-arm64 VERSION=${VERSION}

#
# Releasing: triggered when a tag is created
#
  release:
    if: startsWith(github.ref, 'refs/head/main')
    runs-on: ubuntu-latest
    needs:
      - build-amd64
      - build-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build and push container images
        env:
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_PASS: ${{ secrets.QUAY_PASS }}
          EXPIRE: never
          VERSION: latest
          TOOLS_REPO: localhost/tools
          PLUGIN_TESTS_REPO: localhost/plugin-openshift-tests
          MGM_REPO: localhost/must-gather-monitoring
        run: |
          podman login -u="${QUAY_USER}" -p="${QUAY_PASS}" quay.io
          echo "> Build and publish container image:"
          make build-arch-amd64 VERSION=${VERSION}
          make build-arch-arm64 VERSION=${VERSION}
          make push-manifests VERSION=${VERSION}
